version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:10
    environment:
      BASH_ENV: ~/.env
      CI: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-npm-deps-{{ .Branch }}
            - v1-npm-deps-
      - run: yarn install
      - run:
          name: Jest tests
          command: yarn test
      - run: yarn build
      - save_cache:
          key: v1-npm-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  build_master:
    docker:
      - image: circleci/node:10
    environment:
      BASH_ENV: ~/.env
    steps:
      - checkout
      - run:
          name: Clone build-scripts repo
          command: git clone git@github.com:datadotworld/build-scripts.git
      - run:
          name: Setup aws creds
          command: build-scripts/cicd/setup_aws_credentials.sh
      - restore_cache:
          keys:
            - v1-npm-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-npm-deps-{{ .Branch }}
            - v1-npm-deps-
      - run: yarn install
      - run:
          name: Jest tests
          command: yarn test
      - run:
          name: Generate license text
          command: yarn licenses generate-disclaimer --silent > src/generated/licenses.txt
      - run: yarn build
      - run:
          name: Install integration test deps
          command: |
            sudo apt-get update && sudo apt-get install -qq -y python-pip libpython-dev xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
      - run:
          name: Install AWS Cli
          command: |
            cd /tmp
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            ./awscli-bundle/install -i $HOME/.local/aws -b $HOME/.local/bin/aws
            echo "PATH=$HOME/.local/bin:$PATH" | tee -a ~/.env
      - run:
          name: Run server for tests
          command: yarn http-server build/ -p 3500
          background: true
      - run:
          name: Cypress tests
          command: |
            yarn cypress install
            yarn cypress run
      - save_cache:
          key: v1-npm-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/Cypress
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots
      - store_test_results:
          path: cypress/junit-results
      - run:
          name: Sync to s3
          command: |
            aws s3 sync build s3://dataworld-chartbuilder-us-east-1 --exclude "index.html" --exclude "manifest.json" --exclude "service-worker.js" --exclude "asset-manifest.json"
            aws s3 cp build/index.html s3://dataworld-chartbuilder-us-east-1/index.html --cache-control max-age=300
            aws s3 cp build/manifest.json s3://dataworld-chartbuilder-us-east-1/manifest.json --cache-control max-age=300
            aws s3 cp build/service-worker.js s3://dataworld-chartbuilder-us-east-1/service-worker.js --cache-control max-age=300
            aws s3 cp build/asset-manifest.json s3://dataworld-chartbuilder-us-east-1/asset-manifest.json --cache-control max-age=300
          environment:
            AWS_PROFILE: artifacts
workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
  build_master:
    jobs:
      - build_master:
          filters:
            branches:
              only:
                - master
